name: Build
on:
    push:
        branches: [master]
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        permissions:
            packages: write    
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                python-version: '3.13'
                cache: 'pip'
            - name: Install dependecies
              run: pip install -r requirements.txt
            - name: Unit tests
              run: pytest
            - name: Create Docker image
              run: docker build -t employee-python .
            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Read version from VERSION file
              id: get_version
              run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: ghcr.io/${{ github.repository }}:${{ env.VERSION }}

    update-deployment:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout config repo
          uses: actions/checkout@v4
          with:
            repository: vicziani/calculator-python-config
            token: ${{ secrets.GITHUB_TOKEN }}
            path: config-repo
        - name: Read version from VERSION file
          id: get_version
          run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
        - name: Update image tag in YAML
          run: |
            cd config-repo
            yq e '(.spec.template.spec.containers[] | select(.name == "calculator-python")).image = "ghcr.io/vicziani/calculator-python:${{ env.VERSION }} }}"' -i dev/deployment.yaml

        - name: Commit and push
          run: |
            cd config-repo
            git config user.name "CI Bot"
            git config user.email "ci-bot@example.com"
            git commit -am "chore: update image tag to ${{ env.VERSION }}"
            git push